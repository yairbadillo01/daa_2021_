{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled0.ipynb",
      "provenance": [],
      "authorship_tag": "ABX9TyOSdtOn/1qBE8nv+hmeMFM5",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/yairbadillo01/daa_2021_1/blob/master/30septiembre\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "37lhXrIIQQN-"
      },
      "source": [
        "#Palindromo\n",
        "Es una palabra que se lee, de igual forma de un sentido y de sentido inverso,\n",
        "ejemplo:\n",
        "\n",
        "\n",
        "1.   sugus\n",
        "2.   ojo\n",
        "3.   reconocer\n",
        "4.   10101\n",
        "5.   10:01\n",
        "\n",
        "\n",
        "### Plantamiento del problema:\n",
        "Se desea encontrar a todos los palindromos que esxiten entre la franja horaria de un dia completo, tomando como cuenta inicial 00:00 y como horario final 23:59:\n",
        "El algoritmo debe mostrar en pantalla todos los pandrimos existetes ienen un rango incial \n",
        "\n",
        "\n",
        "**Evidencia, tratare de mejorarlo xd\n",
        "\n",
        "\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "I5-bQ5NnYAME",
        "outputId": "77d1b347-0c3e-4042-8d6f-3b405b02e296",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 129
        }
      },
      "source": [
        "\tint num;\n",
        "\tint i;\n",
        "\t\n",
        "\tfor (i=0; i>=2359;  i++){\n",
        "\t\tif( (i==110), (i==220), (i==330),(i==440); || (i==550);|| (i==1001); || (i==1111); || (i==1221); ){\n",
        "\t\t\ti >>cin>>num;\n",
        "\t\t\t\n",
        "\t}\n",
        "\t\t\n",
        "\t\tcout<<num<<endl;\n",
        "\t}\n",
        "\tgetch();\n",
        "\treturn 0;"
      ],
      "execution_count": 1,
      "outputs": [
        {
          "output_type": "error",
          "ename": "SyntaxError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;36m  File \u001b[0;32m\"<ipython-input-1-e3a3c3600a4a>\"\u001b[0;36m, line \u001b[0;32m1\u001b[0m\n\u001b[0;31m    int num;\u001b[0m\n\u001b[0m          ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"
          ]
        }
      ]
    }
  ]
}